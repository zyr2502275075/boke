/*
|--------------------------------------------------------------------------
|  blog 项目
|  @auth wxc
|  @time 2018-01-16 16：00
|--------------------------------------------------------------------------
*/
const express = require('express');
const path = require('path');
const favicon = require('serve-favicon');
const logger = require('morgan');
const cookieParser = require('cookie-parser');
const bodyParser = require('body-parser');
const flash = require('connect-flash');
const use = require('./bootstrap/use');
const env = require('./bootstrap/env');
const session = require('express-session');
const sessionConfig = require('./config/session');

/*
|--------------------------------------------------------------------------
|  全局函数
|--------------------------------------------------------------------------
|
*/
global.use = use;
global.env = env;

/*
|--------------------------------------------------------------------------
|  数据库
|--------------------------------------------------------------------------
|
*/
const db = require('./bootstrap/database');

/*
|--------------------------------------------------------------------------
|  路由
|--------------------------------------------------------------------------
|
*/
const index = require('./routes/index');
const category = require('./routes/category');
const article = require('./routes/article');
const users = require('./routes/users');

/*
|--------------------------------------------------------------------------
|  全局中间价
|--------------------------------------------------------------------------
|
*/
const locals = require('./middleware/locals');

/*
|--------------------------------------------------------------------------
|  express 实例化
|--------------------------------------------------------------------------
|
*/
const app = express();

/*
|--------------------------------------------------------------------------
|  模版引擎设置
|--------------------------------------------------------------------------
|
*/
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');


/*
|--------------------------------------------------------------------------
|  使用包文件
|--------------------------------------------------------------------------
|
*/
//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));
app.use(logger('dev'));
app.use(bodyParser.json({limit: '50mb'}));
app.use(bodyParser.urlencoded({limit: '50mb', extended: false}));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

/*
|--------------------------------------------------------------------------
|  设置session
|--------------------------------------------------------------------------
|
*/
app.use(session(sessionConfig));

/*
|--------------------------------------------------------------------------
|  设置flash
|--------------------------------------------------------------------------
|
*/
app.use(flash());

/*
|--------------------------------------------------------------------------
|  设置页面 locals 数据
|--------------------------------------------------------------------------
|
*/
app.use(locals);


/*
|--------------------------------------------------------------------------
|  路由使用
|--------------------------------------------------------------------------
|
*/
app.use('/', index);
app.use('/category', category);
app.use('/article', article);
app.use('/users', users);

/*
|--------------------------------------------------------------------------
|  404错误处理
|--------------------------------------------------------------------------
|
*/
app.use((req, res, next) => {
    let err = new Error('Not Found');
    err.status = 404;
    next(err);
});

/*
|--------------------------------------------------------------------------
|  错误处理
|--------------------------------------------------------------------------
|
*/
app.use((err, req, res, next) => {
    // set locals, only providing error in development
    res.locals.message = err.message;
    res.locals.error = req.app.get('env') === 'development' ? err : {};

    // render the error page
    res.status(err.status || 500);
    res.render('error');
});

/*
|--------------------------------------------------------------------------
|  导出 app
|--------------------------------------------------------------------------
|
*/
module.exports = app;
